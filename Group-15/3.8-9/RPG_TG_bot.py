import telebot, json, copy
with open('token_15gr.txt') as f:
    TOKEN = f.read()
bot = telebot.TeleBot(TOKEN)
# {‚Äò–ª–æ–∫–∞—Ü–∏—è‚Äô : {
# ‚Äòtext‚Äô : ‚Äò—Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ‚Äô, 
# ‚Äòitems‚Äô : [‚Äò–ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å‚Äô] , 
# ‚Äònext_move‚Äô : {‚Äò–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ‚Äô : ‚Äò–ª–æ–∫–∞—Ü–∏—è‚Äô}, 
# ‚Äòexchange‚Äô : {‚Äò—á—Ç–æ –º–µ–Ω—è–µ–º‚Äô : ‚Äò–Ω–∞ —á—Ç–æ –º–µ–Ω—è–µ–º‚Äô}
# }
# }

users_info = {}
location = {'1': {'text': '–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –æ–ø–∞—Å–Ω—ã–π –ª–µ—Å, –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤—ã—Ö–æ–¥ –≤ –≥–æ—Ä–æ–¥ –∏ –æ—Å—Ç–∞—Ç—å—Å—è –∂–∏–≤—ã–º', 'items': [], 'next_move': {'–ü–æ–π—Ç–∏ –≤–ø–µ—Ä–µ–¥': "2"}, 'exchange':{}},
            '2': {'text': '–í—ã –ø–æ–ø–∞–ª–∏ –≤ –ª–µ—Å –∏ –æ—â—É—Ç–∏–ª–∏ –ø—Ä–∏—è—Ç–Ω—ã–π –∞—Ä–æ–º–∞—Ç —Å–æ—Å–Ω–æ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø–æ–ª–Ω–∏–ª –ª–µ–≥–∫–∏–µ. –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –≥–ª—É–±–∏–Ω–µ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã, –≥–¥–µ –µ—â–µ –Ω–µ –æ—â—É—â–∞–µ—Ç—Å—è —à—É–º –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—É–µ—Ç—ã.', 'items': ['—Ñ–ª—è–≥–∞'], 'next_move': {"–ü—Ä–æ–π—Ç–∏ –Ω–∞–ª–µ–≤–æ": "3", "–ü—Ä–æ–π—Ç–∏ –ø—Ä—è–º–æ": "4", "–ü—Ä–æ–π—Ç–∏ –Ω–∞–ø—Ä–∞–≤–æ": "5"}, 'exchange':{}},
            '3': {'text': '–ù–∞ –ø–æ–∫—Ä—ã—Ç–æ–π –∑–µ–º–ª–µ –∫–∞–º–µ–Ω–Ω–æ–π –ø–ª–∏—Ç–µ —Å–∏–¥—è—Ç —Ç–µ–º–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã, –∏—Ö –≥–ª–∞–∑–∞ –≥–æ—Ä—è—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ, –∞ –≤ —Ä—É–∫–∞—Ö —É –Ω–∏—Ö –Ω–æ–∂–∏. –û–Ω–∏ —É–ª—ã–±–∞—é—Ç—Å—è –≤–∞–º –∏ –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ù–∞—à –Ω–æ–≤—ã–π –¥—Ä—É–≥!". –í–∞–º –Ω–∞—Å—Ç–æ–ª—å–∫–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥—ã –∏ –≤–æ–¥—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ, —á—Ç–æ –≤—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –∏—Ö –∂–µ—Ä—Ç–≤–æ–π –∏ –≤—Å—ë –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ', 'items': [], 'next_move': {'–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞': "new_game"}, 'exchange':{}},
            '4': {'text': '–í—ã –≤—ã—à–ª–∏ –≤ –ø–æ–ª–µ. –ü–µ—Ä–µ–¥ –≤–∞–º–∏ —Ç–æ—Ä–≥–æ–≤–µ—Ü.', 'items': [], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥": "2"}, 'exchange':{"—à–∫–∞—Ç—É–ª–∫–∞": "–∑–æ–ª–æ—Ç–æ: 3"}},
            '5': {'text': '–í—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –æ–∫–æ–ª–æ –ø–æ–¥–∑–µ–º–µ–ª—å—è, –∫–æ—Ç–æ—Ä–æ–µ —Å–º–æ—Ç—Ä–µ–ª–æ—Å—å –¥–æ–≤–æ–ª—å–Ω–æ —Å—Ç—Ä–∞—à–Ω–æ.', 'items': ["–∫–∏—Ä–∫–∞"], 'next_move': {"–í–æ–π—Ç–∏ –≤–Ω—É—Ç—Ä—å": "7", "–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è": "6", "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥": "2"}, 'exchange':{}},
            '6': {'text': '–û—Å–º–∞—Ç—Ä–∏–≤–∞—è—Å—å –≤–æ–∫—Ä—É–≥, –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ —á—Ç–æ –Ω–∞ —Å—Ç–µ–Ω–µ —Ä—è–¥–æ–º —Å –≤—Ö–æ–¥–æ–º –∫—Ç–æ-—Ç–æ –Ω–∞–Ω–µ—Å —Å—Ç—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–≥–∞–¥–∞—Ç—å. –î–∞–ª–µ–µ –í—ã –Ω–µ–º–Ω–æ–≥–æ –µ—â—ë –ø–æ–±—Ä–æ–¥–∏–ª–∏ —Å –Ω–∞–¥–µ–∂–¥–æ–π —á—Ç–æ-—Ç–æ –Ω–∞–π—Ç–∏...', 'items': ["—à–∫–∞—Ç—É–ª–∫–∞"], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–¥–∑–µ–º–µ–ª—å—é": "5"}, 'exchange':{}},
            '7': {'text': '–°—Ç–µ–Ω—ã –∑–¥–µ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç—ã –≥—Ä—É–±—ã–º –∫–∞–º–Ω–µ–º, –∞ –≤ –≤–æ–∑–¥—É—Ö–µ —Ü–∞—Ä–∏—Ç –ø—Ä–æ—Ö–ª–∞–¥–∞ –∏ —Å—ã—Ä–æ—Å—Ç—å. –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ –ø–æ–¥–∑–µ–º–µ–ª—å—è.', 'items': ["–∑–æ–ª–æ—Ç–æ: 2"], 'next_move': {"–ü–æ–π—Ç–∏ –≤–ø–µ—Ä–µ–¥": "8", "–í—ã–π—Ç–∏ –Ω–∞ —É–ª–∏—Ü—É": "5"}, 'exchange':{}},
            '8': {'text': '–í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –¥—é–∞–ª—å—à–µ, —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ –∏ —Å—ã—Ä–æ. –ù–æ –≤–¥—Ä—É–≥ –≤ –¥–∞–ª–µ–∫–µ –í—ã –∑–∞–º–µ—á–∞–µ—Ç–µ —Å–≤–µ—Ç.', 'items': [], 'next_move': {"–ü–æ–π—Ç–∏ –¥–∞–ª—å—à–µ": "9", "–í–µ—Ä–Ω—É—Ç—å—Å—è": "7"}, 'exchange':{}},
            '9': {'text': '–ö–æ–Ω—Ü–æ–≤–∫–∞ –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏, –Ω–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ –æ–±–æ–π–¥—ë—Ç—Å—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤. –ù–∞ –≤—Ö–æ–¥–µ —Å—Ç–æ–∏—Ç —Ä–∞–∑–±–æ–π–Ω–∏–∫ —Å —Ç–∞–±–ª–∏—á–∫–æ–π "–≤—ã—Ö–æ–¥ –∑–∞ 5 –∑–æ–ª–æ—Ç—ã—Ö"', 'items': [], 'next_move': {}, 'exchange': {"–∑–æ–ª–æ—Ç–æ: 5": "–≤—ã—Ö–æ–¥"}}} # '': {'text': '', 'items': [], 'next_move': {}, 'exchange':{}}
comands = {'help': '–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å.',
           'game': "–ù–∞—á–∏–Ω–∞–µ—Ç –ù–û–í–£–Æ –∏–≥—Ä—É",
           'save': '–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–≥—Ä—É',
           'load': '–ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏–≥—Ä—É –∑–∞–≥—Ä—É–∑–∏–≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ',
           'items': '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã'}
def generate_story(user,position):
        global users_info
        # –±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏
        txt = location[position]['text']
        #—Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = telebot.types.InlineKeyboardMarkup()
        #–°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ö–æ–¥–∞–º
        for i in users_info[user]['loc'][position]['next_move']:
            # –±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            key_txt = i
            key_data = location[position]['next_move'][i]
            keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt,callback_data=key_data))
        # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å
        for i in users_info[user]['loc'][position]['items']:
            #–±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
            key_txt = f'–í–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç - {i}'
            #–≤ callback_data –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—á–∞–ª–æ "item", —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º –±—ã–ª–æ –ø—Ä–æ—â–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π
            key_data = 'item ' + i
            keyboard.add(telebot.types.InlineKeyboardButton(text=f'{key_txt}üîç',callback_data=key_data))
        for i in users_info[user]['loc'][position]['exchange']:
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω—É–∂–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–ª–∏ –Ω–µ–æ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç.
            if i in users_info[user]['items'] or (i.startswith('–∑–æ–ª–æ—Ç–æ: ') and users_info[user]['–∑–æ–ª–æ—Ç–æ'] >= int(i.replace('–∑–æ–ª–æ—Ç–æ: ', ''))):
                # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–±–º–µ–Ω–∞
                key_txt = f'–û–±–º–µ–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç {i} –Ω–∞ {users_info[user]['loc'][position]['exchange'][i]} ü§ù'
                # –≤ callback_data –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—á–∞–ª–æ 'exchange ', —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º –±—ã–ª–æ –ø—Ä–æ—â–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π
                key_data = 'exchange '+i
                keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt,callback_data=key_data))
        return (txt, keyboard)
@bot.message_handler(commands=list(comands.keys()))
def start_game(message):
    global users_info
    if message.text == '/game':
        #–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        users_info[message.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': [], 'loc': copy.deepcopy(location)}
        txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
        bot.send_message(message.chat.id,txt,reply_markup=keyboard)
    elif message.text == '/help':
        info = ''
        for i,j in comands.items():
            info += f'/{i} - {j}'+'\n'
        bot.send_message(message.chat.id,info)
    elif message.text == '/save':
        with open(f'{message.from_user.id}_gr15.json','w',encoding='utf-8') as f:
            json.dump(users_info[message.from_user.username],f,indent=2,ensure_ascii=False)
    elif message.text == '/load':
        try:
            with open(f'{message.from_user.id}_gr15.json','r',encoding='utf-8') as f:
                users_info[message.from_user.username] = json.load(f)
            txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
            bot.send_message(message.chat.id,txt,reply_markup=keyboard)
        except Exception as exc:
            bot.send_message(message.chat.id,f'–í–∞—à–∏—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ(–∏–ª–∏ –æ—à–∏–±–∫–∞ {exc})')
    elif message.text == '/items':
        my_items = (',').join(users_info[message.from_user.username]['items'])
        bot.send_message(message.chat.id,f'–í–∞—à –ø—Ä–µ–¥–º–µ—Ç—ã: {my_items}')
        bot.send_message(message.chat.id,f'–í–∞—à–µ –∑–æ–ª–æ—Ç–æ: {users_info[message.from_user.username]['–∑–æ–ª–æ—Ç–æ']}')
@bot.callback_query_handler(func = lambda call: call.data in location)
def callback_query(call):
    # –º–µ–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users_info[call.from_user.username]['cur_pos'] = call.data
    #–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id, txt, reply_markup=keyboard)
    
@bot.callback_query_handler(func = lambda call: call.data.startswith('item '))
def callback_query(call):
    # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–º–µ–Ω—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É 'item' –Ω–∞ '')
    item = call.data.replace('item ', '')
    # –µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ "–∑–æ–ª–æ—Ç–æ: "
    if item.startswith('–∑–æ–ª–æ—Ç–æ: '):
        # —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –±–∞–ª–Ω—Å —ç—Ç–æ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] += int(item.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        # –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        users_info[call.from_user.username]['items'].append(item)
    # —É–¥–∞–ª—è–µ–º —Å –∫–∞—Ä—Ç—ã –ª–æ–∫–∞—Ü–∏–∏ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç (—á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–µ –≤–∑—è—Ç—å)
    users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['items'].remove(item)
    # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É–¥–∞—á–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
    bot.send_message(call.message.chat.id, f'‚ûï–ü–æ–ª—É—á–µ–Ω {item}‚ûï')
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data.startswith('exchange '))
def callback_query(call):
    # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–º–µ–Ω—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É 'exchange ' –Ω–∞ '')
    item1 = call.data.replace('exchange ', '')
    # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–∏–∑ —Å–ª–æ–≤–∞—Ä—è), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏–º
    item2 = users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['exchange'][item1]
    # –ï—Å–ª–∏ item1 –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '–∑–æ–ª–æ—Ç–æ: '
    if item1.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #—É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç. –ù–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –º—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫ –æ–±–º–µ–Ω–∞
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] -= int(item1.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        # –∏–Ω–∞—á–µ —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç
        users_info[call.from_user.username]['items'].remove(item1)
    #–µ—Å–ª–∏ –º—ã –º–µ–Ω—è–µ–º –Ω–∞ –∑–æ–ª–æ—Ç–æ
    if item2.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] += int(item2.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        # –∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–º –ø—Ä–µ–¥–º–µ—Ç
        users_info[call.from_user.username]['items'].append(item2)
        #—É–¥–∞–ª—è–µ–º —Å –ª–æ–∫–∞—Ü–∏–∏ —ç—Ç–æ—Ç –æ–±–º–µ–Ω
    users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['exchange'].pop(item1)
    if item2 == '–≤—ã—Ö–æ–¥':
        bot.send_message(call.message.chat.id,'–¢–µ–±–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç')
    else:
        # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É–¥–∞—á–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
        bot.send_message(call.message.chat.id,f'–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω. –ü–æ–ª—É—á–µ–Ω–æ {item2}')
        txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
        bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data.startswith('new_game'))
def new_game(call):
    bot.answer_callback_query(call.id,'–í—Å–µ –≤–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã —É–¥–∞–ª–µ–Ω—ã')
    users_info[call.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': [], 'loc': copy.deepcopy(location)}
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
if __name__ == '__main__':
    bot.infinity_polling()
