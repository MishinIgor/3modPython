import telebot,random,json,copy,time
with open('token_5gr.txt') as f:
    TOKEN = f.read()
bot = telebot.TeleBot(TOKEN)

users_info = {}
# '': {'text': '', 'items': [], 'next_move': {}, 'exchange': {}}

locations = {
    '1': {'text': '–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –æ–ø–∞—Å–Ω—ã–π –ª–µ—Å, –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤—ã—Ö–æ–¥ –≤ –≥–æ—Ä–æ–¥ –∏ –æ—Å—Ç–∞—Ç—å—Å—è –∂–∏–≤—ã–º', 'items': ['–ø–µ—Ä—Å—Ç–µ–Ω—å'], 'next_move': {'–ü–æ–π—Ç–∏ –≤–ø–µ—Ä–µ–¥': "2"}, 'exchange': {}},
    '2': {'text': '–í—ã –ø–æ–ø–∞–ª–∏ –≤ –ª–µ—Å –∏ –æ—â—É—Ç–∏–ª–∏ –ø—Ä–∏—è—Ç–Ω—ã–π –∞—Ä–æ–º–∞—Ç —Å–æ—Å–Ω–æ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø–æ–ª–Ω–∏–ª –ª–µ–≥–∫–∏–µ. –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –≥–ª—É–±–∏–Ω–µ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã, –≥–¥–µ –µ—â—ë –Ω–µ –æ—â—É—â–∞–µ—Ç—Å—è —à—É–º –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—É–µ—Ç—ã.', 'items': ['—Ñ–ª—è–≥–∞'], 'next_move': {"–ü—Ä–æ–π—Ç–∏ –Ω–∞–ª–µ–≤–æ": "3", "–ü—Ä–æ–π—Ç–∏ –ø—Ä—è–º–æ": "4", "–ü—Ä–æ–π—Ç–∏ –Ω–∞–ø—Ä–∞–≤–æ": "5"}, 'exchange': {}},
    '3': {'text': '–Ω–∞ –ø–æ–∫—Ä—ã—Ç–æ–π –∑–µ–º–ª–µ –∫–∞–º–µ–Ω–Ω–æ–π –ø–ª–∏—Ç–µ —Å–∏–¥—è—Ç —Ç–µ–º–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã, –∏—Ö –≥–ª–∞–∑–∞ –≥–æ—Ä—è—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ, –∞ –≤ —Ä—É–∫–∞—Ö —É –Ω–∏—Ö –Ω–æ–∂–∏. –û–Ω–∏ —É–ª—ã–±–∞—é—Ç—Å—è –≤–∞–º –∏ –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –Ω–∞—à –Ω–æ–≤—ã–π –¥—Ä—É–≥!". –í–∞–º –Ω–∞—Å—Ç–æ–ª—å–∫–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥—ã –∏ –≤–æ–¥—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ, —á—Ç–æ –≤—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –∏—Ö –∂–µ—Ä—Ç–≤–æ–π –∏ –≤—Å–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ.', 'items': [], 'next_move': {"–í—ã –ø–æ–≥–∏–±–ª–∏. –ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?": "new_game"}, 'exchange': {}},
    '4': {'text': '–í—ã –≤—ã—à–ª–∏ –≤ –ø–æ–ª–µ. –ü–µ—Ä–µ–¥ –≤–∞–º–∏ —Ç–æ—Ä–≥–æ–≤–µ—Ü', 'items': ['—Å–∞–ø–æ–≥'], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è": "2"}, 'exchange': {'—à–∫–∞—Ç—É–ª–∫–∞': "–∑–æ–ª–æ—Ç–æ: 3"}},
    '5': {'text': '–í—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –æ–∫–æ–ª–æ –ø–æ–¥–∑–µ–º–µ–ª—å—è, –∫–æ—Ç–æ—Ä–æ–µ —Å–º–æ—Ç—Ä–µ–ª–æ—Å—å –¥–æ–≤–æ–ª—å–Ω–æ —Å—Ç—Ä–∞—à–Ω–æ', 'items': ['–∫–∏—Ä–∫–∞'], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è": "2", "–í–æ–π—Ç–∏ –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ": "7", "–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è": "6"}, 'exchange': {}},
    '6': {'text': '–û—Å–º–∞—Ç—Ä–∏–≤–∞—è—Å—å –≤–æ–∫—Ä—É–≥, –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ, —á—Ç–æ –Ω–∞ —Å—Ç–µ–Ω–µ —Ä—è–¥–æ–º —Å –≤—Ö–æ–¥–æ–º –∫—Ç–æ-—Ç–æ –Ω–∞–Ω–µ—Å —Å—Ç—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–≥–∞–¥–∞—Ç—å. –î–∞–ª–µ–µ —Ç—ã –Ω–µ–º–Ω–æ–≥–æ –µ—â—ë –ø–æ–±—Ä–æ–¥–∏–ª —Å –Ω–∞–¥–µ–∂–¥–æ–π —á—Ç–æ-—Ç–æ –Ω–∞–π—Ç–∏...', 'items': ["—à–∫–∞—Ç—É–ª–∫–∞"], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è": "5"}, 'exchange': {}},
    '7': {'text': '–°—Ç–µ–Ω—ã –∑–¥–µ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç—ã –≥—Ä—É–±—ã–º –∫–∞–º–Ω–µ–º, –∞ –≤ –≤–æ–∑–¥—É—Ö–µ —Ü–∞—Ä–∏—Ç –ø—Ä–æ—Ö–ª–∞–¥–∞ –∏ —Å—ã—Ä–æ—Å—Ç—å. –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ –ø–æ–¥–∑–µ–º–µ–ª—å—è.', 'items': ["–∑–æ–ª–æ—Ç–æ: 2"], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è": "5", "–ü–æ–π—Ç–∏ –¥–∞–ª—å—à–µ": "8"}, 'exchange': {}},
    '8': {'text': '–¢—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å –¥–∞–ª–ª—å—à–µ, —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ –∏ —Å—ã—Ä–æ. –ù–æ –≤–¥—Ä—É–≥ –≤ –¥–∞–ª–µ–∫–µ —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å —Å–≤–µ—Ç.', 'items': ['—Ç–µ—Ç—Ä–∞–¥—å –ø–æ –∞–ª–≥–µ–±—Ä–µ'], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è": "7", "–ü—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ": "9"}, 'exchange': {}},
    '9': {'text': '–ö–æ–Ω—Ü–æ–≤–∫–∞ –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏, –Ω–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ –æ–±–æ–π–¥–µ—Ç—Å—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤. –£ –≤—ã—Ö–æ–¥–∞ —Å—Ç–æ–∏—Ç —Ä–∞–∑–±–æ–π–Ω–∏–∫ —Å —Ç–∞–±–ª–∏—á–∫–æ–π "–≤—ã—Ö–æ–¥ –∑–∞ 5 –∑–æ–ª–æ—Ç—ã—Ö".', 'items': [], 'next_move': {}, 'exchange': {"–∑–æ–ª–æ—Ç–æ: 5": "–≤—ã—Ö–æ–¥"}},
}

comands = {'help': '–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã',
           'game': '–ù–∞—á–∏–Ω–∞–µ—Ç –ù–û–í–£–Æ –∏–≥—Ä—É',
           'save': '–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–≥—Ä—É',
           'load': '–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏–≥—Ä—É —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
           'items': '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ –∑–æ–ª–æ—Ç–æ'}
key_death = telebot.types.InlineKeyboardMarkup()
key_death.add(telebot.types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞', callback_data='new_game'))
def generate_story(user,position):
    #–±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏
    txt = locations[position]['text']
    #—Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = telebot.types.InlineKeyboardMarkup()
    #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ö–æ–¥–∞–º
    for i in users_info[user]['loc'][position]['next_move']:
        # –±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        key_txt = i
        # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏
        key_data = locations[position]['next_move'][i]
        keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt,callback_data=key_data))
    # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å
    for i in users_info[user]['loc'][position]['items']:
        # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
        key_txt = f'–í–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç {i} üîç'
        key_data = 'item '  + i
        keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt,callback_data=key_data))
    # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    for i in users_info[user]['loc'][position]['exchange']:
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω—É–∂–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç
        if i in users_info[user]['items'] or (i.startswith('–∑–æ–ª–æ—Ç–æ: ') and users_info[user]['–∑–æ–ª–æ—Ç–æ'] >= int(i.replace('–∑–æ–ª–æ—Ç–æ: ', ''))):
            # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–±–º–µ–Ω–∞
            key_txt = f'üëâ–û–±–º–µ–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç {i} –Ω–∞ {users_info[user]['loc'][position]['exchange'][i]} ü§ù'
            key_data = 'exchange ' + i
            keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt,callback_data=key_data))
    return (txt,keyboard)
@bot.message_handler(commands=list(comands.keys()))
def my_game(message):
    global users_info
    if message.text == '/help':
        info = ''
        for key,value in comands.items():
            info += f'/{key} - {value} \n'
        bot.send_message(message.chat.id,info)
    elif message.text == '/game':
        users_info[message.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': [], 'loc': copy.deepcopy(locations)}
        txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
        bot.send_message(message.chat.id,txt,reply_markup=keyboard)
    elif message.text == '/save':
        with open(f'{message.from_user.id}_gr5.json','w',encoding='utf-8') as f:
            json.dump(users_info[message.from_user.username],f,indent=2,ensure_ascii=False)
    elif message.text == '/load':
        try:
            with open(f'{message.from_user.id}_gr5.json','r',encoding='utf-8') as f:
                users_info[message.from_user.username] = json.load(f)
            txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
            bot.send_message(message.chat.id,txt,reply_markup=keyboard)
        except Exception as exc:
            bot.send_message(message.chat.id,f'(–æ—à–∏–±–∫–∞ {exc}). –ü–æ–ø—Ä–æ–±—É–π –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /game.')
    elif message.text == '/items':
        all_items = (',').join(users_info[message.from_user.username]['items'])
        txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
        bot.send_message(message.chat.id,f'–í–∞—à–µ –∑–æ–ª–æ—Ç–æ: {users_info[message.from_user.username]['–∑–æ–ª–æ—Ç–æ']}')
        bot.send_message(message.chat.id,f'–í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã: {all_items}',reply_markup=keyboard)
@bot.callback_query_handler(func=lambda call: call.data in locations)
def callback_query(call):
    users_info[call.from_user.username]['cur_pos'] = call.data
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func=lambda call: call.data == 'new_game')
def callback_query(call):
    users_info[call.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': [], 'loc': copy.deepcopy(locations)}
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data.startswith('item '))
def callback_query(call):
    # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–º–µ–Ω—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É 'item', –Ω–∞ '')
    item = call.data.replace('item ','')
    if item.startswith('–∑–æ–ª–æ—Ç–æ: '):
        # —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –±–∞–ª–∞–Ω—Å —ç—Ç–æ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç
        emoji = 'üíµ'
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] += int(item.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        emoji = 'üì¶'
        # –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        users_info[call.from_user.username]['items'].append(item)
    # —É–¥–∞–ª—è–µ–º —Å –∫–∞—Ä—Ç—ã –ª–æ–∫–∞—Ü–∏–∏ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç
    users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['items'].remove(item)
    if item == '—Ç–µ—Ç—Ä–∞–¥—å –ø–æ –∞–ª–≥–µ–±—Ä–µ':
        bot.answer_callback_query(call.id,'–í—ã –ø–æ–≥–∏–±–ª–∏')
        bot.send_message(call.message.chat.id,'–ü–æ–∑–∞—Ä–∏–ª–∏—Å—å —Å–ø–∏—Å–∞—Ç—å –î–ó? –ù–µ —Ç—É—Ç —Ç–æ –±—ã–ª–æ...–í —Ç–µ—Ç—Ä–∞–¥–∏ –ø—Ä–∏–≥—Ä–µ–ª–∞—Å—å –∑–º–µ—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–ø—É–≥–∞–ª–∞—Å—å –∏ —É–∂–∞–ª–∏–ª–∞ –≤–∞—Å. –¢–µ–ø–µ—Ä—å –≤—ã –º–µ—Ä—Ç–≤—ã',reply_markup=key_death)
    # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É–¥–∞—á–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
    elif item == '—Ñ–ª—è–≥–∞':
        bot.answer_callback_query(call.id,'–í—ã –ø–æ–≥–∏–±–ª–∏')
        bot.send_message(call.message.chat.id,'–í–æ —Ñ–ª—è–≥–µ –æ—Å—Ç–∞–≤–∞–ª–æ—Å—å –µ—â—ë –≤–∏—Å–∫–∏. –í—Ä–æ–¥–µ–±—ã, –º–∞–ª–æ, –Ω–æ –Ω–∞ –ø—É—Å—Ç–æ–π –∂–µ–ª—É–¥–æ–∫ —É–∂–∞—Å–Ω–∞—è —Å–º–µ—Å—å. –í—ã –ø—å—è–Ω—ã–π —É–ø–∞–ª–∏ –≤ –ª—É–∂—É, –∏ –ø–æ–≥–∏–±–ª–∏ –∑–∞—Ö–ª–µ–±–Ω—É–≤—à–∏—Å—å. –ê –≤–µ–¥—å –º–∏–Ω–∑–¥—Ä–∞–≤ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–ª...',reply_markup=key_death)
    else:
        if item == '–∫–∏—Ä–∫–∞':
            bot.answer_callback_query(call.id,f'–Ø –∫–∞–º–µ–Ω—â–∏–∫ —Ä–∞–±–æ—Ç–∞—é 3 –¥–Ω—è –±–µ–∑ –∑–∞—Ä–ø–ª–∞—Ç—ã')
        elif item == '—Å–∞–ø–æ–≥':
            bot.answer_callback_query(call.id,f'–ù—É –∏ –≤–æ–Ω—å –∏–∑ —ç—Ç–∏—Ö —Ç–∞–ø–æ–∫...')
        txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
        bot.send_message(call.message.chat.id,f'–ì–æ—Ç–æ–≤–æ! {emoji}')
        bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data.startswith('exchange '))
def callback_query(call):
    item1 = call.data.replace('exchange ', '')# —á—Ç–æ —Ö–æ—Ç—è—Ç –∑–∞ –æ–±–º–µ–Ω
    item2 = users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['exchange'][item1] #—á—Ç–æ –¥–∞–¥—É—Ç –ø—Ä–∏ –æ–±–º–µ–Ω–µ
    # –ï—Å–ª–∏ item1 –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∑–æ–ª–æ—Ç–æ:
    if item1.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #–£–º–µ–Ω—å—à–µ–º –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç. –ü—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–º, –æ–Ω–∞ –≤—à–∏—Ç–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] -= int(item1.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        users_info[call.from_user.username]['items'].remove(item1)
    # –ï—Å–ª–∏ –º—ã –º–µ–Ω—è–µ–º –Ω–∞ –∑–æ–ª—Ç–æ
    if item2.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] += int(item2.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        # –∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–º –ø—Ä–µ–¥–º–µ—Ç
        users_info[call.from_user.username]['items'].append(item2)
    users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['exchange'].pop(item1)
    # –µ—Å–ª–∏ –º—ã –æ–±–º–µ–Ω—è–ª–∏—Å—å –Ω–∞ –≤—ã—Ö–æ–¥, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏ —Å–æ–æ–±—â–∞–µ–º –æ –ø–æ–±–µ–¥–µ
    if item2 == '–≤—ã—Ö–æ–¥':
        bot.answer_callback_query(call.id,'–ü–û–ë–ï–î–ê!!!')
        bot.send_message(call.message.chat.id,f'üçûüçïü•™ü•ôüåÆüçî @{call.from_user.username}! –¢–µ–±–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç!üçûüçïü•™ü•ôüåÆüçî')
    else:
        # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É–¥–∞—á–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
        bot.answer_callback_query(call.id,'–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω')
        bot.send_message(call.message.chat.id,f'–ü–æ–ª—É—á–µ–Ω–æ {item2}')
        txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
        bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
if __name__ == '__main__':
    bot.infinity_polling()