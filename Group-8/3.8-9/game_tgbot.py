import telebot,random,json
from copy import deepcopy
with open('token_8gr.txt') as f:
    TOKEN = f.read()
bot = telebot.TeleBot(TOKEN)
users_info = {}
locations = { '1': {'text': '–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –æ–ø–∞—Å–Ω—ã–π –ª–µ—Å. –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤—ã—Ö–æ–¥ –≤ –≥–æ—Ä–æ–¥ –∏ –æ—Å—Ç–∞—Ç—å—Å—è –∂–∏–≤—ã–º.', 
                    'items': [], 'next_move': {'–ü–æ–π—Ç–∏ –≤–ø–µ—Ä—ë–¥': '2'}, 'exchange': {} },
             '2': {'text': '–í—ã –ø–æ–ø–∞–ª–∏ –≤ –ª–µ—Å –∏ –æ—â—É—Ç–∏–ª–∏ –ø—Ä–∏—è—Ç–Ω—ã–π –∞—Ä–æ–º–∞—Ç —Å–æ—Å–Ω–æ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø–æ–ª–Ω–∏–ª –ª–µ–≥–∫–∏–µ. –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –≥–ª—É–±–∏–Ω–µ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã, –≥–¥–µ –µ—â—ë –Ω–µ –æ—â—É—â–∞–µ—Ç—Å—è —à—É–º –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—É–µ—Ç—ã.', 'items': ['—Ñ–ª—è–≥–∞'], 
                   'next_move': {"–ü–æ–π—Ç–∏ –Ω–∞–ª–µ–≤–æ": "3",
                                 "–ü–æ–π—Ç–∏ –ø—Ä—è–º–æ": "4",
                                 "–ü–æ–π—Ç–∏ –Ω–∞–ø—Ä–∞–≤–æ": "5"}, 'exchange': {}},
            '3': {'text': '–ù–∞ –ø–æ–∫—Ä—ã—Ç–æ–π –∑–µ–º–ª—ë–π –∫–∞–º–µ–Ω–Ω–æ–π –ø–ª–∏—Ç–µ —Å–∏–¥—è—Ç —Ç–µ–º–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã, –∏—Ö –≥–ª–∞–∑–∞ –≥–æ—Ä—è–¥ –≤ —Ç–µ–º–Ω–æ—Ç–µ, –∞ –≤ —Ä—É–∫–∞—Ö —É –Ω–∏—Ö –Ω–æ–∂–∏. –û–Ω–∏ —É–ª—ã–±–∞—é—Ç—Å—è –≤–∞–º –∏ –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ù–∞—à –Ω–æ–≤—ã–π –¥—Ä—É–≥!". –í–∞–º –Ω–∞—Å—Ç–æ–ª—å–∫–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥—ã –∏ –≤–æ–¥—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ, —á—Ç–æ –≤—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –∏—Ö –∂–µ—Ä—Ç–≤–æ–π –∏ –≤—Å–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ.', 'items': [], 'next_move': {"–í—ã –ø–æ–≥–∏–±–ª–∏üíÄ. –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≥–æ": "new_game"}, 'exchange': {}},
            '4': {'text': '–í—ã –≤—ã—à–ª–∏ –≤ –ø–æ–ª–µ. –ü–µ—Ä–µ–¥ –≤–∞–º–∏ —Ç–æ—Ä–≥–æ–≤–µ—Ü.', 'items': [], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥": "2"}, 'exchange': {"—à–∫–∞—Ç—É–ª–∫–∞": "–∑–æ–ª–æ—Ç–æ: 3"} },
            "5": {'text': '–í—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –æ–∫–æ–ª–æ –ø–æ–¥–∑–µ–º–µ–ª—å—è, –∫–æ—Ç–æ—Ä–æ–µ —Å–º–æ—Ç—Ä–µ–ª–æ—Å—å –¥–æ–≤–æ–ª—å–Ω–æ —Å—Ç—Ä–∞—à–Ω–æ.', 'items': ['–¥—É–±–∏–Ω–∫–∞'], 'next_move': {'–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥': '2', "–í–æ–π—Ç–∏ –≤–Ω—É—Ç—Ä—å": "7", "–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –≤–æ–∫—Ä—É–≥": "6"}, 'exchange': {} },
            "6": {'text': "–û—Å–º–∞—Ç—Ä–∏–≤–∞—è—Å—å –≤–æ–∫—Ä—É–≥, –≤—ã –∑–∞–º–µ–∞–µ—Ç–µ, —á—Ç–æ –Ω–∞ —Å—Ç–µ–Ω–µ —Ä—è–¥–æ–º —Å –≤—Ö–æ–¥–æ–º –∫—Ç–æ-—Ç–æ –Ω–∞–Ω–µ—Å —Å—Ç—Ä–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–≥–∞–¥–∞—Ç—å. –î–∞–ª–µ–µ –í—ã –Ω–µ–º–Ω–æ–≥–æ –µ—â—ë –ø–æ–±—Ä–æ–¥–∏–ª —Å –Ω–∞–¥–µ–∂–¥–æ–π —á—Ç–æ-—Ç–æ –Ω–∞–π—Ç–∏...", 'items': ["—à–∫–∞—Ç—É–ª–∫–∞"], 'next_move': {'–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–¥–∑–µ–º–µ–ª—å—é': '5'}, 'exchange': {} },
            "7": {'text': '–°—Ç–µ–Ω—ã –∑–¥–µ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç—ã –≥—Ä—É–±—ã–º –∫–∞–º–Ω–µ–º, –∞ –≤ –≤–æ–∑–¥—É—Ö–µ —Ü–∞—Ä–∏—Ç –ø—Ä–æ—Ö–ª–∞–¥–∞ –∏ —Å—ã—Ä–æ—Å—Ç—å. –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ –ø–æ–¥–∑–µ–º–µ–ª—å—è', 'items': ["–∑–æ–ª–æ—Ç–æ: 2"], 'next_move': {"–ü—Ä–æ–π—Ç–∏ –≤–ø–µ—Ä—ë–¥": "8", "–í—ã–π—Ç–∏ –Ω–∞ —É–ª–∏—Ü—É": "5"}, 'exchange': {}},
            "8": {'text': '–¢—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å –¥–∞–ª—å—à–µ, —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ –∏ —Å—ã—Ä–æ. –ù–æ –≤–¥—Ä—É–≥ –≤ –¥–∞–ª–µ–∫–µ —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å —Å–≤–µ—Ç', 'items': ['—Ä–µ–≤–æ–ª—å–≤–µ—Ä'], 'next_move': {"–ü–æ–π—Ç–∏ –¥–∞–ª—å—à–µ": "9", "–í–µ—Ä–Ω—É—Ç—å—Å—è": "7"}, 'exchange': {} },
            "9": {'text': '–ö–æ–Ω—Ü–æ–≤–∫–∞ –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏, –Ω–æ –ø–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ –æ–±–æ–π–¥–µ—Ç—Å—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤.', 'items': ['–ø–µ—Ä—Å—Ç–µ–Ω—å'], 'next_move': {"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥": "8"}, 'exchange': {"–∑–æ–ª–æ—Ç–æ: 5": "new_location"} },
            "10": {'text': '–¢—Ä–æ–ø–∞ –∏–∑ –ª–µ—Å–∞ –ø—Ä–∏ –∑–∞–∫–∞—Ç–µ –≤—ã–≥–ª—è–¥–∏—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –∂–∏–≤–æ–ø–∏—Å–Ω–æ. –¢—ë–ø–ª—ã–µ –ª—É—á–∏ —Å–æ–ª–Ω—Ü–∞ –æ–∫—Ä–∞—à–∏–≤–∞—é—Ç –¥–µ—Ä–µ–≤—å—è –≤ –∑–æ–ª–æ—Ç–∏—Å—Ç–æ-–∫—Ä–∞—Å–Ω—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏, —Å–æ–∑–¥–∞–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤–æ–ª—à–µ–±—Å—Ç–≤–∞ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏—è. –¢–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –¥–æ–º–æ–π —É–∂–µ –Ω–µ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ —Å–∫–∞–∑–∫–∞.', 'items': ['—Ñ–ª—è–≥–∞'], 'next_move': {"–¢—Ä–æ–ø–∞ –¥–æ–º–æ–π": "–≤—ã—Ö–æ–¥"}, 'exchange': {} }
             }
locations2 = {}
comands = {'help': '–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã –∫–æ–º–∞–Ω–¥',
           'start': '–ù–∞—á–∏–Ω–∞–µ—Ç –ù–û–í–£–Æ –∏–≥—Ä—É',
           'save': '–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å',
           'load': '–ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
           'items': '–í—ã–≤–æ–¥–∏—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å'}
keyboard_dead = telebot.types.InlineKeyboardMarkup()
keyboard_dead.add(telebot.types.InlineKeyboardButton(text='–í—ã –ø–æ–≥–∏–±–ª–∏, –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ üíÄ',callback_data='new_game'))
def generate_story(user,position):
    #–±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏
    txt = users_info[user]['loc'][position]['text']
    # —Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = telebot.types.InlineKeyboardMarkup()
    #–°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ö–æ–¥–∞–º
    for i in users_info[user]['loc'][position]['next_move']:
        key_txt = i+' üö™'
        key_data = users_info[user]['loc'][position]['next_move'][i]
        keyboard.add(telebot.types.InlineKeyboardButton(text = key_txt, callback_data=key_data))
    #–°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    for i in users_info[user]['loc'][position]['items']:
        #–±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        key_txt = f'–í–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç - {i}üîç'
        # –≤ callback_data –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—á–∞–ª–æ 'item', —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º –±—ã–ª–æ –ø—Ä–æ—â–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π
        key_data = 'item ' + i
        keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt, callback_data= key_data))
    #–°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±–º–µ–Ω–∞
    for i in users_info[user]['loc'][position]['exchange']:
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω—É–∂–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–ª–∏ –Ω–µ–æ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç
        if i in users_info[user]['items'] or (i.startswith('–∑–æ–ª–æ—Ç–æ: ') and users_info[user]['–∑–æ–ª–æ—Ç–æ'] >= int(i.replace('–∑–æ–ª–æ—Ç–æ: ',''))):
            # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–±–º–µ–Ω–∞
            key_txt = f'üëâ–æ–±–º–µ–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç {i} –Ω–∞ {users_info[user]['loc'][position]['exchange'][i]}ü§ù'
            # –≤ callback_data –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—á–∞–ª–æ 'exchange ', —á—Ç–æ–±—ã –≤ –±—É–¥—É—â–µ–º –±—ã–ª–æ –ø—Ä–æ—â–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π
            key_data = 'exchange ' + i
            keyboard.add(telebot.types.InlineKeyboardButton(text=key_txt, callback_data=key_data))
    return (txt,keyboard)
@bot.message_handler(commands=list(comands.keys()))
def start_game(message):
    global users_info
    if message.text == '/help':
        info = ''
        for key,value in comands.items():
            info += f'/{key} - {value} \n'
        bot.send_message(message.chat.id,info)
    elif message.text == '/start':
        # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        users_info[message.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': [], 'loc': deepcopy(locations)}
        txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
        bot.send_message(message.chat.id, txt, reply_markup=keyboard)
    elif message.text == '/save':
        with open(f'{message.from_user.id}_gr8.json','w',encoding='utf-8') as f:
            json.dump(users_info[message.from_user.username],f,indent=2,ensure_ascii=False)
    elif message.text == '/load':
        try:
            with open(f'{message.from_user.id}_gr8.json','r',encoding='utf-8') as f:
                users_info[message.from_user.username] = json.load(f)
            txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
            bot.send_message(message.chat.id, txt, reply_markup=keyboard)
        except Exception as exc:
            bot.send_message(message.chat.id, f'–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ(–æ—à–∏–±–∫–∞: {exc}). –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –≤–≤–µ–¥—è /start')
    elif message.text == '/items':
        txt, keyboard = generate_story(message.from_user.username,users_info[message.from_user.username]['cur_pos'])
        all_items = (',').join(users_info[message.from_user.username]["items"])
        bot.send_message(message.chat.id,f'–ó–æ–ª–æ—Ç–æ: {users_info[message.from_user.username]["–∑–æ–ª–æ—Ç–æ"]}')
        bot.send_message(message.chat.id,f'–ü—Ä–µ–¥–º–µ—Ç—ã: {all_items}',reply_markup=keyboard)
@bot.callback_query_handler(func= lambda call: call.data in locations)
def callback_query(call):
    # –º–µ–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users_info[call.from_user.username]['cur_pos'] = call.data
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏
    txt, keyboard = generate_story(call.from_user.username, users_info[call.from_user.username]['cur_pos'])
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data.startswith('item '))
def callback_query(call):
    # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–º–µ–Ω—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É 'item' –ù–∞ '')
    item = call.data.replace('item ', '')
    users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['items'].remove(item)
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    if item.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –±–∞–ª–∞–Ω—Å —ç—Ç–æ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] += int(item.replace('–∑–æ–ª–æ—Ç–æ: ',""))
        bot.send_message(call.message.chat.id, f'–ü–æ–ª—É—á–µ–Ω–æ {item}',reply_markup=keyboard)
    elif item == '—Ñ–ª—è–≥–∞':
        bot.answer_callback_query(call.id,'–í—ã –ø–æ–≥–∏–±–ª–∏')
        bot.send_message(call.message.chat.id, '–ù–∞ –¥–Ω–µ —Ñ–ª—è–≥–∏ –µ—â—ë –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å "–æ–≥–Ω–µ–Ω–Ω–∞—è –≤–æ–¥–∞". –í—ã —Ä–µ—à–∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è —Ö—Ä–∞–±—Ä–æ—Å—Ç–∏, –Ω–æ –Ω–∞ –ø—É—Å—Ç–æ–π –∂–µ–ª—É–¥–æ–∫ –≤—ã –ª–∏—à—å —É–ø–∞–ª–∏ –ª–∏—Ü–æ–º –≤ –ª—É–∂—É –∏ –∑–∞—Ö–ª–µ–±–Ω—É–ª–∏—Å—å. –ê –≤–µ–¥—å –º–∏–Ω–∑–¥—Ä–∞–≤ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–ª...',reply_markup=keyboard_dead)
    elif item == '—Ä–µ–≤–æ–ª—å–≤–µ—Ä':
        bot.answer_callback_query(call.id,'–í—ã –ø–æ–≥–∏–±–ª–∏')
        bot.send_message(call.message.chat.id, '–í—ã –Ω–∞—à–ª–∏ –æ—Ç–ª–∏—á–Ω–æ–µ, –Ω–æ —Å—Ç–∞—Ä–æ–µ –æ—Ä—É–∂–∏–µ. –ö–æ–≥–¥–∞ –≤—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –ø–æ–ª–æ–∂–∏—Ç—å —Ä–µ–≤–æ–ª—å–≤–µ—Ä —Å–µ–±–µ –ø–æ–¥ –ø–æ—è—Å, —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫—É—Ä–æ–∫. –ü—É–ª—è —Ä–µ–∫–æ—à–µ—Ç–∏–ª–∞ –ø–æ –≤—Å–µ–º—É –ø–æ–¥–∑–µ–º–µ–ª—å—é –∏ –ø–æ–ø–∞–ª–∞ –≤–∞–º –≤ –≥–æ–ª–æ–≤—É.',reply_markup=keyboard_dead)
    elif item == '–ø–µ—Ä—Å—Ç–µ–Ω—å':
        bot.answer_callback_query(call.id,'–ü–µ—Ä—Å—Ç–µ–Ω—å —Å–ª–æ–≤–Ω–æ —Å–∫–æ–≤–∞–ª –ø–∞–ª–µ—Ü. –ù–æ —Ç–µ–ø–µ—Ä—å –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ –≤–∞—Å –Ω–∏–∫—Ç–æ –Ω–µ —Ç—Ä–æ–Ω–µ—Ç.')
        users_info[call.from_user.username]['loc']['3']['text'] = '–ù–∞ –ø—É—Ç–Ω–∏–∫–∞ –Ω–∞–ø–∞–ª–∏ —Ä–∞–∑–±–æ–π–Ω–∏–∫–∏, –Ω–æ, —É–≤–∏–¥–µ–≤ –ø–µ—Ä—Å—Ç–µ–Ω—å –≥–ª–∞–≤—ã —Ä–∞–∑–±–æ–π–Ω–∏–∫–æ–≤ –Ω–∞ –µ–≥–æ —Ä—É–∫–µ, –æ–Ω–∏ –æ—Ç—Å—Ç—É–ø–∏–ª–∏. –ü—É—Ç–Ω–∏–∫ –±—ã–ª –æ–¥–µ—Ç –≤ –ø—Ä–æ—Å—Ç—É—é –æ–¥–µ–∂–¥—É, –Ω–æ –µ–≥–æ –ø–µ—Ä—Å—Ç–µ–Ω—å –±—ã–ª —É–∫—Ä–∞—à–µ–Ω –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–º–∏ –∫–∞–º–Ω—è–º–∏ –∏ –∏–∑–ª—É—á–∞–ª —è—Ä–∫–æ–µ —Å–∏—è–Ω–∏–µ. –†–∞–∑–±–æ–π–Ω–∏–∫–∏ —É–∑–Ω–∞–ª–∏ –ø–µ—Ä—Å—Ç–µ–Ω—å —Å–≤–æ–µ–≥–æ –≥–ª–∞–≤–∞—Ä—è –∏ –ø–æ–Ω—è–ª–∏, —á—Ç–æ –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ —á–µ–ª–æ–≤–µ–∫, –æ–±–ª–∞–¥–∞—é—â–∏–π –≤–ª–∞—Å—Ç—å—é –∏ –≤–ª–∏—è–Ω–∏–µ–º. –ò—Å–ø—É–≥–∞–≤—à–∏—Å—å –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∑–∞ –Ω–∞–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, —Ä–∞–∑–±–æ–π–Ω–∏–∫–∏ –æ—Ç—Å—Ç—É–ø–∏–ª–∏.'
        users_info[call.from_user.username]['loc']['3']['next_move'] = {'–¢—Ä–æ–ø–∞ –∏–∑ –ª–µ—Å–∞': '10'}
        bot.send_photo(call.message.chat.id,'https://fine-jewellery.ru/wp-content/files_mf/1397408142–ø–µ—á–∞—Ç–∫–∞—Å–≥–µ—Ä–±–æ–º–∏–∑–∑–æ–ª–æ—Ç–∞.jpg',reply_markup=keyboard)
    else:
        #–ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        users_info[call.from_user.username]['items'].append(item)
        #—Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É–¥–∞—á–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
        bot.send_message(call.message.chat.id, f'–ü–æ–ª—É—á–µ–Ω–æ {item}')
        #–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        bot.send_message(call.message.chat.id,txt,reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data == '–≤—ã—Ö–æ–¥')
def the_end(call):
    bot.send_message(call.message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü! –í–æ—Ç –Ω–∞ —Ç–µ–±–µ üß†, –±–æ–ª—å—à–µ –Ω–µ —Ç–µ—Ä—è–π—Å—è –∏ –Ω–µ —Ç–µ—Ä—è–π.')
    bot.send_photo(call.message.chat.id, 'https://wallpapers.com/images/file/inspirational-kneeling-man-hoct4hym94sin20x.jpg')
@bot.callback_query_handler(func = lambda call: call.data.startswith('exchange '))
def callback_query(call):
    #–ë–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞(–≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–º–µ–Ω—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É 'exchange ' –Ω–∞ '')
    item1 = call.data.replace('exchange ','')
    # –±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–∏–∑ —Å–ª–æ–≤–∞—Ä—è), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏–º
    item2 = users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['exchange'][item1]
    # –ï—Å–ª–∏ item1 –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '–∑–æ–ª–æ—Ç–æ: '
    if item1.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #—É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç
        #–Ω–∞ —Ç–æ, —á—Ç–æ —É –Ω–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ,–º—ã —ç—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] -= int(item1.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        #–∏–Ω–∞—á–µ —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç
        users_info[call.from_user.username]['items'].remove(item1)
    # –µ—Å–ª–∏ –º—ã –º–µ–Ω—è–µ–º –Ω–∞ –∑–æ–ª–æ—Ç–æ
    if item2.startswith('–∑–æ–ª–æ—Ç–æ: '):
        #—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å
        users_info[call.from_user.username]['–∑–æ–ª–æ—Ç–æ'] += int(item2.replace('–∑–æ–ª–æ—Ç–æ: ', ''))
    else:
        # –∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–º –ø—Ä–µ–¥–º–µ—Ç
        users_info[call.from_user.username]['items'].append(item2)
    # —É–¥–∞–ª—è–µ–º —Å –ª–æ–∫–∞—Ü–∏–∏ —ç—Ç–æ—Ç –æ–±–º–µ–Ω
    users_info[call.from_user.username]['loc'][users_info[call.from_user.username]['cur_pos']]['exchange'].pop(item1)
       
    # –µ—Å–ª–∏ –º—ã –æ–±–º–µ–Ω—è–ª–∏—Å—å –Ω–∞ –≤—ã—Ö–æ–¥, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–µ
    # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É–¥–∞—á–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
    bot.send_message(call.message.chat.id, f'–ü–æ–ª—É—á–µ–Ω–æ {item2}. –û—Ç–ª–∏—á–Ω—ã–π –æ–±–º–µ–Ω!')
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É–¥—É—é—â–∏–π —Ö–æ–¥
    txt, keyboard = generate_story(call.from_user.username, users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id, txt, reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data == 'new_game')
def new_game(call):
    users_info[call.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': [], 'loc': deepcopy(locations)}
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id, txt, reply_markup=keyboard)
@bot.callback_query_handler(func = lambda call: call.data == 'new_location')
def new_loc(call):
    users_info[call.from_user.username] = {'cur_pos': '1', '–∑–æ–ª–æ—Ç–æ': 0, 'items': users_info['items'], 'loc': deepcopy(locations2)}
    txt, keyboard = generate_story(call.from_user.username,users_info[call.from_user.username]['cur_pos'])
    bot.send_message(call.message.chat.id, txt, reply_markup=keyboard)
bot.polling(non_stop=True, interval=0)